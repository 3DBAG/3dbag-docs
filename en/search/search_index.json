{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Welcome to the documentation of the 3DBAG! This is the first open 3D building data set that is generated fully automatically and covers a whole country on this level of detail.</p> <p>On this page you will find information on what is the 3DBAG and how it is created, a few of the possible use cases and how the 3DBAG relates to similar data sets in the Netherlands.</p> <ul> <li>Data Sources describes the data sets that are used as input for the 3DBAG.</li> <li>Schema describes the structure of the 3DBAG in detail.</li> <li>Data Formats describes the different ways we deliver the 3DBAG.</li> <li>Terms of Use explains the conditions that apply when using the 3DBAG in your application.</li> <li>Contact shows where you can ask questions or how you can contact us.</li> <li>And with the Viewer you can view the 3DBAG in your browser!</li> </ul>"},{"location":"#what-is-the-3dbag","title":"What is the 3DBAG?","text":"<p>The 3DBAG is an up-to-date data set containing 3D building models of the Netherlands. The 3DBAG is open data. It contains 3D models at multiple levels of detail, which are generated by combining two open data sets: the building data from the BAG and the height data from the AHN. The 3DBAG is updated regularly in order to remain up-to-date with the latest openly available building stock and elevation information.</p> <p>The 3DBAG is also a place for experiments. It is a medium for testing ideas as we do in the 3D geoinformation research group. Based on experiences with the data, we are constantly improving our methods, and by providing our own service we retain full control over the whole process from input data, pre-processing and reconstruction to querying and using the reconstructed 3D data in urban applications. This allows us to develop, test and release improvements, or even break things, as we see best.</p>"},{"location":"#main-features","title":"Main features","text":"<ul> <li>Three levels of detail.     Pick the most suitable LoD for your application from the available LoD1.2, LoD1.3 and LoD2.2.</li> <li>Both 2D and 3D.     Besides the 3D models, we also offer the 2D projections of their roof surfaces with associated height references.</li> <li>Underground and overlapping buildings and building parts removed.     The completely underground and overlapping buildings (eg one building \"floating\" above another) are excluded from the reconstruction. Buildings with parts under the terrain have their underground parts cut off.</li> <li>Fall back to a simple model for problematic input.     Buildings with glass roofs, especially greenhouses, have an inconsistent point cloud in the AHN. For these buildings, that usually have a very simple shape anyways, we fall back to a simplified 3D model in order to generate usable models.</li> <li>Quality control integrated.     We run our 3D models through val3dity, so that you don't need to validate the 3D data yourself.</li> <li>Available in several formats.     CityJSON, GeoPackage, Wavefront OBJ, WMS, WFS.</li> </ul>"},{"location":"#common-applications","title":"Common applications","text":"<p>Some of the use cases for this data set that we know about:</p> <ul> <li>Applications related to energy use in buildings, such as estimating energy demand, retrofitting costs, finding suitable roofs for solar panels.</li> <li>Simulating the wind flow and pollutant dispersion in urban areas (eg. Simwind)</li> <li>Calculating noise pollution in urban areas (eg. 3D Noise)</li> <li>Analysing the urban structure and evaluating new developments.</li> </ul> <p>Do you have an interesting use case for the 3DBAG? We would love to hear about it!</p>"},{"location":"#relation-to-similar-data-sets","title":"Relation to similar data sets","text":""},{"location":"#3d-basisvoorziening","title":"3D Basisvoorziening","text":"<p>The 3D Basisvoorziening is a collection of Dutch national 3D data sets created in a collaboration of the Kadaster and the 3D geoinformation research group. It was made available in the summer of 2020. While the 3DBAG only contains objects from the BAG, the 3D Basisvoorziening also contains object from the Large Scale Topographic Map (BGT) of the Netherlands. Thus, the 3DBAG only contains buildings, while the 3D Basisvoorziening is a watertight 3D model of the whole country, including terrain objects. Furthermore, the 3DBAG only uses the AHN as height source, while the 3D Basisvoorziening also uses a yearly updated point cloud created from stereo images (Beeldmateriaal Nederland).</p> <p>The tools and algorithms that are used for generating the 3D Basisvoorziening, are created by the 3D geoinformation group. In fact, the LoD1.3 models in the 3D Basisvoorziening were generated with a previous, more stable version of the same algorithms that we use in the 3DBAG. Since then, we have improved the reconstruction process specifically for a better LoD2.2 reconstruction.</p>"},{"location":"#3d-geluid","title":"3D Geluid","text":"<p>The 3D Geluid data set was created in collaboration with the National Institute for Public Health and the Environment (RIVM), Ministry of Infrastructure and Water Management (Rijkswaterstaat), Interprovinciaal Overleg, Kadaster and the 3D geoinformation research group.</p> <p>Both the 3D Geluid and the 3DBAG use the BAG as a basis for the buildings. While the 3DBAG uses the AHN only, the 3D Geluid data has been extended with LoD1.2 models that were generated with the current point cloud of Kadaster where the buildings are newer than AHN.</p> <p>Besides building models, the 3D Geluid data also contains two additional layers that model the height of the terrain, and the sound absorption values of the various terrain objects. The building models in 3D Geluid data are LoD1.3 and represented as 2D only, since the current common noise calculation software can only handle 2D buildings (+ height attribute).</p> <p>Similarly to the 3D Basisvoorziening, the LoD1.3 models in the 3D Geluid data were generated with a previous, more stable version of the same algorithms that we use in the 3DBAG.</p>"},{"location":"#funding","title":"Funding","text":"<p> This project has received funding from the European Research Council (ERC) under the European Unions Horizon2020 Research &amp; Innovation Programme: grant agreement no. 677312 UMnD: Urban modelling in higher dimensions and grant agreement no. 101068452 3DBAG: detailed 3D Building models Automatically Generated for very large areas</p> <p>The technology behind the 3DBAG service was developed by the 3D Geoinformation research group, Department of Urbanism at the Delft University of Technology. This has been done in various research projects. Funding has been received from the European Commission (ERC), the Netherlands Organization for Scientific Research (NWO), and the Amsterdam Institute of Advanced Metropolitan Solutions (AMS). The algorithms have been further improved in collaborations with partners such as RIVM, Rijkswaterstaat and Kadaster.</p>"},{"location":"contact/","title":"Contact","text":""},{"location":"contact/#help","title":"Help","text":"<p>If you have questions or need help about the data, go to https://geoforum.nl/. When posting questions on the forum, please use the tag <code>3DBAG</code>. Although the forum is mainly in Dutch, you are free to use English of course.</p>"},{"location":"contact/#feedback","title":"Feedback","text":"<p>We are very happy to hear whatever you have to say about the 3DBAG. You can give your feedback via this form.</p> <p></p> <p>If you want to report issues with specific models, you can do so by clicking on the model in the 3D viewer, and then clicking on the red Report a problem button in the Building Information viewer.</p>"},{"location":"contact/#viewer","title":"Viewer","text":"<p>At the GitHub repository of the viewer, bugs specifically in the viewer can be reported.</p> <p>Special thanks to NASA AMMOS for 3DTilesRendererJS, which is used for visualising the buildings, and to Geodan for pg2b3dm, used to export our data to 3D Tiles.</p>"},{"location":"contact/#mail","title":"Mail","text":"<p>Finally, you an also contact us directly at info@3dbag.nl.</p>"},{"location":"copyright/","title":"Copyright and License","text":""},{"location":"copyright/#data-and-documentation","title":"Data and Documentation","text":"<p>3DBAG by 3D geoinformation research group and 3DGI is licensed under CC BY 4.0</p> <p>The 3DBAG is open data. This includes all downloadable data files and data distributed through web services. You are free to copy, distribute, and adapt the 3DBAG data, as long as you,</p> <ol> <li>give credit to the 3D geoinformation group and 3DGI,</li> <li>provide a link to this license,</li> <li>indicate if you made any changes to the data.</li> </ol> <p>Note that some content in the documentation is reused from other works. Such content has its source marked explicitly, and you need to comply with their respective license when using them.</p>"},{"location":"copyright/#how-to-credit-the-3dbag-data","title":"How to credit the 3DBAG data","text":"<p>We require that you use the credit \u201c\u00a9 3DBAG by tudelft3d and 3DGI\u201d. </p> <p>In digital media you must also provide a link to this copyright page. In printed media, or where links are not possible, its best if you expand the credit to \"3DBAG by 3D geoinformation research group (TU Delft) and 3DGI\" and direct the readers to \"3dbag.nl\".</p> <p>The name tudelft3d is a short alias to the full name 3D geoinformation research group.</p> <p>If you integrate the 3DBAG data in a browsable electronic map, the credit should appear in the bottom right corner of the map.</p>"},{"location":"copyright/#how-to-cite-3dbag","title":"How to cite 3DBAG","text":"<p>Refer to the the article Automated 3D Reconstruction of LoD2 and LoD1 Models for All 10 Million Buildings of the Netherlands.</p> <pre><code>@misc{peters2022,\n      title={Automated 3D reconstruction of LoD2 and LoD1 models for all 10 million buildings of the Netherlands}, \n      author = \"Ravi Peters and Bal{\\'a}zs Dukai and Stelios Vitalis and {van Liempt}, Jordi and Jantien Stoter\",\n      year = \"2022\",\n      doi = \"10.14358/PERS.21-00032R2\",\n      language = \"English\",\n      volume = \"88\",\n      pages = \"165--170\",\n      journal = \"Photogrammetric Engineering and Remote Sensing\",\n      issn = \"0099-1112\",\n      publisher = \"American Society for Photogrammetry and Remote Sensing\",\n      number = \"3\",\n}\n</code></pre>"},{"location":"copyright/#software","title":"Software","text":"<p>The software and components that we created for making and serving the 3DBAG are licensed independently of the 3DBAG data and documentation.</p> <p>Our viewer relies on 3DTilesRendererJS (license) by NASA AMMOS and pg2b3dm (license) by Geodan.</p>"},{"location":"delivery/cityjson/","title":"CityJSON","text":"<p>CityJSON is an open data format for distributing 3D city models (also known as digital twins), and a JSON-encoding of the CityGML data model. CityJSON is in the process of becoming a community standard of the Open Geospatial Consortium.</p> <p>The CityJSON specification prescribes how to store the 3D geometry as well as the semantics of common objects in a city, eg. buildings, vegetation, roads, waterways and bridges. This makes the the data model optimal for spatial analysis.</p> <p>The three guiding principles for the format are compactness, simplicity and ease of use for software development. CityJSON has approximately a 6x smaller size than CityGML due to the JSON-encoding. Furthermore, there are already several open software that work with CityJSON files. We present a few of them below. Try them out!</p> <p>The CityJSON files of the 3DBAG contain all the 3D layers (LoD1.2, LoD1.3, LoD2.2), but only the attributes that apply to the whole building.</p> <p>Note: To automatically download multiple 3DBAG tiles in CityJSON format, please refer to this script.</p>"},{"location":"delivery/cityjson/#ninja-and-azul","title":"ninja and azul","text":"<p>ninja is a drag-and-drop web application for visualising and editing CityJSON files.</p> <p>On macOS azul can visualise several data formats, including CityJSON.</p> A portion of the 3DBAG visualised in ninja. A portion of the 3DBAG visualised in azul."},{"location":"delivery/cityjson/#qgis-cityjson-loader-plugin","title":"QGIS CityJSON Loader plugin","text":"<p>With the CityJSON loader plugin it is possible to load CityJSON files into QGIS 3, and view them in 3D. You can open the 3D viewer by selecting <code>View</code> -&gt; <code>New 3D Map View</code>. For QGIS 3 versions older than 3.2, there is an extra step necessary.</p> A portion of the 3DBAG visualised in QGIS, with the 3D Map View on the top and the features in 2D on the bottom."},{"location":"delivery/cityjson/#cjio","title":"cjio","text":"<p>cjio is tool with a command-line-interface for working with CityJSON files. For instance, you can get information about the file contents, subset and merge files, convert them to other formats etc.</p> <p>List all the attributes (and more) in a 3DBAG file:</p> <pre><code>cjio 3dbag_&lt;version&gt;_&lt;tile ID&gt;.json info --long\n</code></pre> <p>Extract only the LoD2.2 from a 3DBAG file:</p> <pre><code>cjio 3dbag_&lt;version&gt;_&lt;tile ID&gt;.json extract_lod 2 save out.json\n</code></pre>"},{"location":"delivery/fgb/","title":"FlatGeobuf","text":"<p>FlatGeobuf is a performant binary encoding for geographic data. We make the tile index for each 3DBAG release available in this format.</p>"},{"location":"delivery/fgb/#qgis","title":"QGIS","text":"<p>You can directly load the FlatGeobuf tile index with the URL that you find on the 3DBAG download page. No need to download the file. To to this go to <code>Layer &gt; Add layer &gt; Add Vector Layer</code>. Then select for <code>Source type</code> the option <code>HTTP(S),cloud,etc.</code>, paste the URL in the URI field and click the 'Add' button.</p>"},{"location":"delivery/gpkg/","title":"GeoPackage","text":"<p>GeoPackage is an open geodata format, based on SQLite. It supports vector features, tile matrix sets, attributes and also extensions. The format can be used for storing certain types of 3D geometry. It is widely adopted an can be used in QGIS, ArcGIS and FME too.</p> <p>We have 3DBAG GeoPackage files available separately for each tile, and we also offer one big file that contains the entire 3DBAG dataset. The GeoPackage files contain all the layers.</p> <p>Note: To automatically download multiple 3DBAG tiles in GeoPackage format, please refer to this script.</p>"},{"location":"delivery/gpkg/#geopackage-data-dump-file","title":"GeoPackage data dump file","text":"<p>When working with the compressed GeoPackage files, it is not strictly necessary to decompress them. GDAL supports virtual file systems, which allows to access the contents of the compressed .gpkg without decompressing the file first. The GeoPackage that contains the entire 3DBAG (the data dump file) has been compressed as a Seek-Optimized ZIP (SOZip) file. GDAL (from version 3.7) supports the seek-optimized profile for .zip files, giving an improved performance.</p> <p>An example GDAL command for accessing the uncompressed Netherlands GeoPackage:</p> <p><code>ogrinfo -so -al /vsizip/nl_3dbag.gpkg.zip</code></p> <p>The compressed GeoPackage files can be imported directly to a PostgreSQL database using GDAL and more specifically the ogr2ogr tool. Here is an example:</p> <p><code>PG_USE_COPY=YES OGR_TRUNCATE=YES ogr2ogr -gt 65536 -lco SPATIAL_INDEX=NONE -f PostgreSQL PG:\"dbname=&lt;DATABASE&gt; port=&lt;PORT&gt; host=&lt;HOST&gt; user=&lt;USER&gt; active_schema=&lt;SCHEMA&gt; password=&lt;PASSWORD&gt;\" \"/vsizip/3dbag_nl.gpkg.zip\"</code></p>"},{"location":"delivery/gpkg/#geopackage-in-3d-in-qgis","title":"GeoPackage in 3D in QGIS","text":"<p>When opening a 3DBAG file in QGIS (by dragging the file or going to <code>Layer</code> -&gt; <code>Add Layer</code> -&gt; <code>Add Vector Layer...</code>), you can choose which layers to import. In QGIS 3 it is possible to view the 3D layers in the 3D viewer (exact steps may vary between versions):</p> <ol> <li> <p>Adjust the <code>Layer Properties</code>. Go to the <code>3D View</code> tab and change <code>No Symbols</code> to <code>Single Symbol</code> and adjust the settings to your preference. In older QGIS 3 versions you will find the button <code>Enable 3D renderer</code> instead.</p> </li> <li> <p>Go to <code>View</code> -&gt; <code>3D Map View</code> to open the 3D viewer.</p> </li> </ol> The tab in the Layer Properties with the settings for the 3D Map View. A portion of the 3DBAG data in GeoPackage format. On the top is the 3D Map View, in the left the attributes, and in the bottom the 2D features."},{"location":"delivery/gpkg/#import-from-qgis-to-postgres","title":"Import from QGIS to Postgres","text":"<p>To import your 3DBAG <code>.gpkg</code> file from QGIS into your PostgreSQL database, you may need to convert the geometry column type to ensure compatibility. Follow these steps:</p>"},{"location":"delivery/gpkg/#1-convert-geometry-type","title":"1) Convert Geometry Type:","text":"<p>Use the <code>Collect Geometries</code> tool to standardize the geometry type. Go to <code>Vector</code> \u2192 <code>Geometry Tools</code> \u2192 <code>Collect Geometries</code>. Select your layer and create a temporary output layer.</p> Changing the geometry column type in QGIS."},{"location":"delivery/gpkg/#2-import-the-layer-to-postgresql","title":"2) Import the Layer to PostgreSQL","text":"<p>1) Open <code>Database</code>--&gt;<code>DB Manager</code> 2) Expand <code>PostGIS</code> and connect to your database. 3) Click the <code>Import Layer/File</code> button and 4) Select the temporary layer as the input. 5) Fill in the required details (table name, schema, etc.)</p> How to import layer from QGIS to your DB."},{"location":"delivery/ifc/","title":"IFC","text":"<p>IFC (Industry Foundation Classes) is a global, open standard for sharing building and facility data. It is an open standard and widely used for Building Information Modeling (BIM) during the design and construction phases.</p> <p>Since 3DBAG version 2025.09.03 we offer an experimental IFC version of the 3DBAG data. This is IFC version 4.3 provided in the IFC STEP-file format (ISO 10303-21) with the <code>.ifc</code> extension.</p> <p>Note: To automatically download multiple 3DBAG tiles in IFC format, please refer to this script.</p>"},{"location":"delivery/obj/","title":"Wavefront OBJ","text":"<p>Wavefront OBJ is an open data format for 3D graphics. It does not contain any attributes or semantics, only the 3D geometry of the building models. This format is primarily suitable for importing the 3DBAG geometries into 3D graphics applications or 3D CAD applicatons (this might require additional format conversion).</p> <p>The OBJ files for the 3DBAG contain the 3D geometries only and each 3D layer is stored in a separate file. The three OBJ files are compressed into a single ZIP file per tile. The object coordinates are in the Amersfoort / RD New + NAP height coordinate reference system.</p> <p>Note: To automatically download multiple 3DBAG tiles in OBJ format, please refer to this script.</p>"},{"location":"delivery/obj/#blender","title":"Blender","text":"A portion of the 3DBAG data opened in Blender. <p>OBJ files can be directly opened in Blender. Besides, there is also a plugin for importing CityJSON files into Blender.</p> <p>The objects in the files are a real-world coordinate system. Therefore they have very large coordinates. When the file is imported into Blender, they are not centered around the origin (0, 0, 0) which causes the surfaces to flicker. Therefore, it is recommended to move the objects to the origin.</p> <p>When importing the OBJ file, choose the option <code>Z Up</code>, so that the objects are correctly oriented. If you turn off the <code>Split by Object</code>, then all objects (the buildings) are imported as a single Blender object, which makes it easier to move the whole file content. After the import, you can focus the camera to the objects by selecting <code>Scene Collection</code> on the right of the screen, then pressing <code>.</code> on the numpad (the regular <code>.</code> on the keyboard does not work).</p> <p>Then select the object (or all individual objects if split them on import) and press <code>Tab</code> to open the Edit Mode. Then click on the small arrow that is marked in the screenshot above.</p> <p>Then change the X and Y values to <code>0</code>. Press <code>.</code> on the numpad again to re-focus the camera on the model.</p>"},{"location":"delivery/webservices/","title":"Webservices","text":"<p>Webservices make it possible to specify via a URL exactly which models to download from the 3DBAG. We offer traditional 2D webservices (WFS and WMS) and a 3D webservice that we call the 3DBAG API.</p> <p>The 2D webservices are supported by all major GIS software packages. They serve directly the 2D layers of the 3DBAG and a tile-index that corresponds to the 3DBAG tiles that are available for download in various formats.</p> <p>Additionally, the 3D API can be used to retrieve 3DBAG buildings with their 3D geometry and all the available attributes in the CityJSONFeatures format.</p> <p>You can find the webservice links on the 3DBAG Downloads page.</p>"},{"location":"delivery/webservices/#2d-webservices","title":"2D webservices","text":""},{"location":"delivery/webservices/#wfs-2d","title":"WFS (2D)","text":"<p>The Web Feature Service (WFS) is an Open Geospatial Consortium standard, and it describes how to query, create and modify geospatial data through the internet.</p> <p>Available layers:</p> <ul> <li>lod12</li> <li>lod13</li> <li>lod22</li> <li>tiles</li> </ul> LoD1.3 2D WFS layer visualised in QGIS, with the BRT Baselayer from PDOK in the background. <p>In order to properly filter the WFS layer in python, please take a look at our script.</p>"},{"location":"delivery/webservices/#wms-2d","title":"WMS (2D)","text":"<p>The Web Map Service is an Open Geospatial Consortium standard to retrieve maps as images through the internet.</p> LoD1.3 2D WMS layer visualised in QGIS, with the BRT Baselayer from PDOK in the background."},{"location":"delivery/webservices/#2d-webservices-in-qgis","title":"2D webservices in QGIS","text":"<p>Here you find a tutorial on using webservices in QGIS, created by one of our colleagues of the 3D geoinformation research group. At <code>3:18</code> in the video you can see how to load the webservices of the previous 3DBAG version. The process is almost the same for the current 3DBAG version.</p> <p>The video also refers to the PDOK services plugin, which is very handy for loading base layers.</p>"},{"location":"delivery/webservices/#3d-services","title":"3D services","text":""},{"location":"delivery/webservices/#3dbag-api","title":"3DBAG API","text":"<p>The base URL of the 3DBAG API is api.3dbag.nl and more information about the available endpoints can be found on its embedded documentation page. As opposed to the 2D webservices described above, the 3DBAG API returns 3D geometries. It can be used to retrieve a single building (using the BAG <code>identificatie</code> code) or all buildings within a certain bounding box with all the available attributes in CityJSONFeature objects.</p> <p>The 3D API returns a sequence of CityJSONFeature objects which can be saved in a CityJSONSeq file with the <code>city.jsonl</code> extension, using the Python snippet below:</p> <pre><code>import urllib.request\nimport json\n\nmyurl = \"https://api.3dbag.nl/collections/pand/items/NL.IMBAG.Pand.1655100000500568\"\nwith urllib.request.urlopen(myurl) as response:\n\n    j = json.loads(response.read().decode('utf-8'))\n    with open(\"output.city.jsonl\", \"w\") as my_file:\n        my_file.write(json.dumps(j[\"metadata\"]) + \"\\n\")\n        if \"feature\" in j:\n            my_file.write(json.dumps(j[\"feature\"]) + \"\\n\")\n        if \"features\" in j:\n            for f in j[\"features\"]:\n                my_file.write(json.dumps(f) + \"\\n\")\n</code></pre> <p>If you need your data in CityJSON format, you can convert from CityJSONSeq to CityJSON, using the tool cjio as follows:</p> <pre><code>cat &lt;path-to&gt;output.city.jsonl | cjio stdin save &lt;path-to&gt;output.city.json\n</code></pre> <p>Note: For requests that return more than 10 buildings, the 3DBAG API paginates the results. We recommend using our script to convert paginated responses into a single CityJSON file.</p> <p>The 3DBAG API is currently not OGC-compliant, but we aim for full compliance with the OGC API Features specification in a later release. At the moment the only supported CRS is Amersfoort / RD New + NAP height (EPSG:7415).</p>"},{"location":"delivery/webservices/#3d-tiles","title":"3D Tiles","text":"<p>3D Tiles is an Open Geospatial Consortium community standard for streaming massive heterogeneous 3D geospatial datasets. We use 3D Tiles for streaming the building models into our 3D Viewer and we make the same set of 3D Tiles available for external use too.</p> <p>The three LoD-s (LoD1.2, LoD1.3, LoD2.2) are served as separate tilesets. The link to the tilesets can be found on our Downloads page.</p> <p>The volume of usage is not limited, but this may change in the future. The Copyright notice is required.</p> <p>Details of the 3D Tiles:</p> <ul> <li>Uses 3D Tiles v1.1.</li> <li>Tileset and content CRS is EPSG:4978.</li> <li>The tileset content is binary glTF (.glb).</li> <li>The glTF assets contain feature metadata (per Building), using the EXT_mesh_features and EXT_structural_metadata extensions.</li> <li>The buildings are colored to a uniform color.</li> <li>The glTF files are compressed, using the KHR_mesh_quantization and EXT_meshopt_compression extensions.</li> <li>The main tileset is using explicit tiling and it is split into several External tilesets.</li> </ul> <p>Our 3D Tiles are generated with Tyler.</p> <p>Below is a sample script to include the 3DBAG 3D Tiles in a Cesium viewer. Note that you need to substitute <code>&lt;YOUR CESIUM ION TOKEN&gt;</code> with your own Cesium Ion access token.</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n\n  &lt;meta charset=\"utf-8\"&gt;\n\n  &lt;!-- Include the CesiumJS JavaScript and CSS files --&gt;\n  &lt;script src=\"https://cesium.com/downloads/cesiumjs/releases/1.133/Build/Cesium/Cesium.js\"&gt;&lt;/script&gt;\n  &lt;link href=\"https://cesium.com/downloads/cesiumjs/releases/1.133/Build/Cesium/Widgets/widgets.css\"\n        rel=\"stylesheet\"&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;div id=\"cesiumContainer\"&gt;&lt;/div&gt;\n\n&lt;script type=\"module\"&gt;\n    // Your access token can be found at: https://ion.cesium.com/tokens.\n    // Replace `your_access_token` with your Cesium ion access token.\n    Cesium.Ion.defaultAccessToken = '&lt;YOUR CESIUM ION TOKEN&gt;';\n\n    // Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.\n    const viewer = new Cesium.Viewer('cesiumContainer', {\n        terrain: Cesium.Terrain.fromWorldTerrain(),\n    });\n\n\n    try {\n        const tileset = await Cesium.Cesium3DTileset.fromUrl(\n            'https://data.3dbag.nl/v20250903/cesium3dtiles/lod22/tileset.json'\n        );\n        viewer.scene.primitives.add(tileset)\n        viewer.zoomTo(\n            tileset,\n            new Cesium.HeadingPitchRange(\n                0.5,\n                -0.5,\n                tileset.boundingSphere.radius * 0.05\n            )\n        );\n    } catch (error) {\n        // Handle errors\n        console.log(`There was an error while creating the 3D tileset. ${error}`);\n    }\n\n&lt;/script&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"overview/group/","title":"About Us","text":"<p>The 3D geoinformation research group is part of the Delft University of Technology, and is affiliated with AMS, the Amsterdam Institute for Advanced Metropolitan Solutions. It focuses on the technologies underpinning geographical information systems (GIS), and aims at designing, developing, and implementing better systems to model 3D cities, buildings, and landscapes. These systems help in environmental modelling, urban planning, crisis management, automated cartographic generalisation, information modelling, modelling of the interior of buildings, etc. It is a multidisciplinary group, consisting of computer scientists, geomatics engineers, and geographers.</p> <p>3DGI is a spin-off of the research group and does consultancy and software development in the field of 3D geo-information.</p> <p>The 3DBAG is currently maintained by:</p> <ul> <li>Bal\u00e1zs Dukai (3DGI)</li> <li>Ravi Peters (3DGI)</li> <li>Gina Stavropoulou (tudelft3d)</li> <li>Jantien Stoter (tudelft3d)</li> </ul> <p>In the past also the following persons have contributed to the creation of the 3DBAG:</p> <ul> <li>Jordi van Liempt</li> <li>Stelios Vitalis</li> <li>Teng Wu</li> </ul>"},{"location":"overview/media/","title":"In the media","text":"<p>Below you can find a list of notable articles, posts, tweets and videos about 3D BAG. Please send us a mail if you think something is missing!</p>"},{"location":"overview/media/#applications-of-3dbag","title":"Applications of 3DBAG","text":"<ul> <li>3D printing<ul> <li>CityScale</li> <li>Heinze Havinga</li> </ul> </li> <li>Wind simulation by Frank Van Gool</li> <li>Solar analysis by Dennis Hulsegge</li> <li>Flood simulation by Maxim Knepfle</li> <li>Old Cadastral boundaries in project Virtueel Hoogeveen by Andy Benjamins</li> <li>Shadow analysis in Revit by Ekko Nap</li> <li>Energy transition for the built environment<ul> <li>VNG</li> <li>Tomahawk</li> </ul> </li> <li>BIM integration by IRP</li> <li>Revit integration by Enveo</li> <li>Subdivision of 3DBAG into indoor entities by Coders CO.</li> </ul>"},{"location":"overview/media/#public-adoption-of-3dbag-in-other-platforms","title":"Public adoption of 3DBAG in other platforms","text":"<ul> <li>Amsterdam 3D</li> <li>Utrecht 3D</li> <li>Zwolle</li> <li>ESRI<ul> <li>Dordrecht by Niels van der Vaart</li> <li>Amersfoort by Maarten Welmers</li> </ul> </li> <li>Signum</li> <li>SpotInfo</li> <li>ROM3D</li> <li>Shint\u014d Labs</li> </ul>"},{"location":"overview/media/#tools-and-tutorials-on-3dbag","title":"Tools and tutorials on 3DBAG","text":"<ul> <li>Blender Hoogtedata Addon</li> <li>GIS2BIM tool for Dynamo by Maarten Vroegindeweij</li> <li>Infraworks video tutorial by Richard de Nier</li> <li>3D BAG in Revit video by BFAS</li> <li>3D BAG in AutoCAD article + video by RODEMA</li> <li>3D BAG CityJSON to IFC video by Hans Lammerts</li> </ul>"},{"location":"overview/media/#3dbag-in-the-news","title":"3DBAG in the news","text":"<ul> <li>Used in the interactive maps for the Dutch tv-programme Ruimteschip Aarde</li> <li>3DBAG gets ERC funding</li> <li>3D BAG wins the 2021 Geospatial World Excellence Award in the Content Platform category</li> <li>Reddit</li> <li>Tweakers.net</li> <li>Geo-Info</li> <li>GIM-International</li> <li>BK nieuws</li> <li>LinkedIn announcement by Jantien Stoter</li> </ul>"},{"location":"overview/media/#publications-using-3dbag","title":"Publications using 3DBAG","text":"<ul> <li>Automatic Building Age Prediction from Street View Images</li> </ul>"},{"location":"overview/release_notes/","title":"Release Notes","text":""},{"location":"overview/release_notes/#20250903","title":"2025.09.03","text":"<p>Release date: 09 September 2025</p> <p>Today we are excited to release a new version of the 3DBAG. Major new features include two new output formats: 3D Tiles (for web visualisation) and IFC (for BIM users). There are also some smaller improvements, such as the new attribute <code>b3_h_nok</code> containing the main ridgeline elevation. And we made several improvements to the docs, like some pointers to our 3dbag-scripts for developers.</p> <p>The tooling behind the scenes also received many improvements, allowing us to release new 3DBAG versions faster and more reliably in the future. A notable example is the introduction of a new global attribute schema, allowing us to define and enforce a consistent set of attributes across all 3DBAG outputs. We also use this global schema to automatically generate the attribute schema documentation, which is now guaranteed to be accurate and up-to-date without requiring manual edits.</p> <p>3DBAG is generated using 100% open source software. For this release we used our building reconstruction software roofer version 1.0.0-beta-5. If you are interested in using the 3DBAG software or want to contribute to 3DBAG you are welcome to join our Zulip chat.</p> <p>This release counts 107 715 47 BAG objects with a 3D building model and was funded by the 3DBAG innovation platform.</p> <p>Special thanks to Amir Hakim for his work on the IFC export functionality.</p>"},{"location":"overview/release_notes/#changed-fixed","title":"Changed / Fixed","text":"<ul> <li>Attribute <code>b3_kwaliteitsindicator</code> was added to the CityJSON output</li> <li>Fixed attribute <code>b3_kwaliteitsindicator</code> being always false</li> <li>Removed attribute <code>b3_succes</code></li> <li>Fixed extremely low and negative roof elevation values for some buildings</li> <li>Fixed in tile download map:<ul> <li>Transparancy reduces after map move</li> <li>Map start point is now set to the center of the country.</li> </ul> </li> <li>New attribute schema page in documentation</li> </ul>"},{"location":"overview/release_notes/#added","title":"Added","text":"<ul> <li>New output formats<ul> <li>3D tiles version 1.1</li> <li>IFC version 4.3</li> </ul> </li> <li>new attributes:<ul> <li><code>b3_h_nok</code></li> <li><code>b3_n_nok</code></li> </ul> </li> <li>Structured attribute schema. This is used during the 3DBAG generation process and to generate documentation.</li> <li>List with the missing BAG objects was added to the metadata section on the download page.</li> <li>Documentation: added references to 3dbag-scripts, added new export formats (IFC, 3D tiles).</li> </ul>"},{"location":"overview/release_notes/#known-issues","title":"Known issues","text":"<ul> <li>397 512 BAG features without 3D model (typically due to a lack of elevation data) are missing from the output.</li> <li><code>b3_opp_dak_*</code>, <code>b3_opp_grond</code> do not account for holes in the polygon.</li> <li>BAG date/time attributes in GPKG output are of the string type</li> </ul>"},{"location":"overview/release_notes/#20241216","title":"2024.12.16","text":"<p>Release date: 20 December 2024</p> <p>With this release we are including the AHN5 pointcloud as input data for 3DBAG. This means that the 3DBAG buildings are updated in the north-west, west and southern parts of the country. There are also a couple of new attributes, and in the CityJSON output you will now also find BAG objects for which no 3D model could be reconstructed due to a lack of elevation data or another reason (you can infer this from the object attributes).</p> <p>This is also the first version of 3DBAG that was generated using the improved 3DBAG software pipeline. These software improvements were made possible by a WaU subsidy from Kadaster. Thanks to these improvements we can keep updating the 3DBAG in the future. All our software is open source.</p> <p>This release counts 10 796 210 BAG objects with a 3D building model and was funded by the 3DBAG innovation platform.</p>"},{"location":"overview/release_notes/#changed-fixed_1","title":"Changed / Fixed","text":"<ul> <li>Fixed: attributes <code>b3_azimut</code>, <code>b3_hellingshoek</code> are null for many buildings.</li> <li>Removed atribute <code>b3_reconstructie_onvolledig</code>, replaced by <code>b3_extrusie</code> and <code>b3_pw_onvoldoende</code>.</li> <li>The computation of the <code>b3_rmse_*</code> attributes are now calculated using all the AHN building points, instead of only roofplane points.</li> <li>Buildings with a footprint area above 30 000 square meters and very complex buildings with more than 900 roofplanes are now only reconstruction in LoD1.1.</li> </ul>"},{"location":"overview/release_notes/#added_1","title":"Added","text":"<ul> <li>The attributes <code>b3_azimut</code>, <code>b3_hellingshoek</code> are now also available in the CityJSON output</li> <li>Output for all buildings in CityJSON output, also those without 3D model</li> <li>new attributes:<ul> <li><code>b3_n_vlakken</code></li> <li><code>b3_is_glas_dak</code></li> <li><code>b3_extrusie</code></li> <li><code>b3_succes</code></li> <li><code>b3_mutatie_ahn4_ahn5</code></li> <li><code>b3_puntdichtheid_ahn5</code></li> <li><code>b3_nodata_fractie_ahn5</code></li> <li><code>b3_nodata_radius_ahn5</code></li> <li><code>b3_pw_onvoldoende</code></li> </ul> </li> </ul>"},{"location":"overview/release_notes/#known-issues_1","title":"Known issues","text":"<ul> <li>BAG date/time attributes in GPKG output are of the string type</li> <li>A small number of triangulated builings in the OBJ output have large spikes.</li> <li>Attribute <code>b3_kwaliteitsindicator</code> is currently missing from the CityJSON output</li> </ul>"},{"location":"overview/release_notes/#20240420-beta","title":"2024.04.20 \u2013 beta","text":"<p>Release date: 25 April 2024</p> <p>Patch release of 2024.02.28</p> <p>This release fixes a number of issues with the previous release. The number of missing buildings is significantly reduced, making this the largest 3DBAG release ever with 10 413 738 reconstructed buildings. Also an issue with the attribute <code>b3_bouwlagen</code> was fixed for buildings with a negative minimum roof elevation.</p>"},{"location":"overview/release_notes/#changed-fixed_2","title":"Changed / Fixed","text":"<ul> <li>Fixed: Attribute <code>b3_bouwlagen</code> are null for buildings with a negative minimum roof elevation.</li> <li>The number of missing buildings was reduced by 40842 compared to the previous released.</li> </ul>"},{"location":"overview/release_notes/#known-issues_2","title":"Known issues","text":"<ul> <li>BAG date/time attributes in GPKG output are of the string type</li> <li>Attributes <code>b3_kwaliteitsindicator</code>, <code>b3_azimut</code>, <code>b3_hellingshoek</code> are currently missing from the CityJSON output</li> </ul>"},{"location":"overview/release_notes/#20240228-beta","title":"2024.02.28 \u2013 beta","text":"<p>Release date: 28 February 2024</p> <p>The most notable change with this release is the addition of the <code>b3_bouwlagen</code> attribute that estimates the number of floors of a building. This is based on the work of Ellie Roy, which was adapted for and integrated into the 3DBAG generation pipeline. For now only predictions up to 5 floors are available due to the reduced accuracy of the prediction model for higher buildings. Furthermore, due to certain constraints in the building features, predictions for the number of floors are missing for some lower-height buildings but they will become available in a future release.</p> <p>A number of other additions and bug fixes is also included in this release. See below for the full details.</p>"},{"location":"overview/release_notes/#changed-fixed_3","title":"Changed / Fixed","text":"<ul> <li>Updated BAG source data. See the Metadata for the details</li> <li>Fix polygons with duplicate vertices prior to triangulation, this reduces significantly the number of missing faces for buildings in the OBJ output and in the 3D viewer</li> <li>Fix incorrect semantic labels for ground and roof surfaces in OBJ and GPKG outputs (<code>labels</code> attribute)</li> <li>Update CityJSON outputs to CityJSON v2.0</li> <li>Added the <code>PointOfContact</code> information, 3DBAG <code>version</code> and a link to the full metadata file in the metadata object of CityJSON outputs</li> <li>Added <code>processStep</code>-s to the lineage (see the metadata)</li> <li>Changed the URL scheme for downloads</li> </ul>"},{"location":"overview/release_notes/#added_2","title":"Added","text":"<ul> <li>New attribute <code>b3_bouwlagen</code></li> <li>New attribute <code>b3_kwaliteitsindicator</code></li> <li>New attribute <code>b3_azimut</code></li> <li>New attribute <code>b3_hellingshoek</code></li> <li>The tile index is now available as a FlatGeobuf file. See download page</li> <li>Quality dashboard with an analysis of various quality aspects of the release</li> <li>Previous versions of 3DBAG are now also available on the Downloads page, starting from version 2023.10.08</li> </ul>"},{"location":"overview/release_notes/#known-issues_3","title":"Known issues","text":"<ul> <li>BAG date/time attributes in GPKG output are of the string type</li> <li>Attribute <code>b3_bouwlagen</code> are null for buildings with a negative minimum roof height.</li> <li>Attributes <code>b3_kwaliteitsindicator</code>, <code>b3_azimut</code>, <code>b3_hellingshoek</code> are currently missing from the CityJSON output</li> <li>The following tiles maybe have incomplete data in the GPKG 2D layer output (missing attributes): 9/500/596, 7/528/608, 7/384/496</li> </ul>"},{"location":"overview/release_notes/#20231008-beta","title":"2023.10.08 \u2013 beta","text":"<p>Release date: 18 October 2023</p> <p>The most notable changes with this release are the addition of attributes with estimates for the area of various surfaces types (e.g. party wall, exterior wall, roof, floor), and the introduction of a new experimental RESTful API at <code>api.3dbag.nl</code>. The new API returns the full 3D geometry as well as all the attributes in the CityJSONFeatures format. The WFS/WMS api's will remain available as well.</p> <p>A number of bug fixes is also included in this release. See below for the full details.</p>"},{"location":"overview/release_notes/#changed-fixed_4","title":"Changed / Fixed","text":"<ul> <li>Updated BAG source data. See the Metadata for the details.</li> <li>Fix an error with the <code>b3_mutatie_ahn3_ahn4</code> attribute due to an issue with our AHN3 input tiles. This only affects a small number of buildings.</li> <li>Improve visual appearance of buildings that originate from overlapping BAG polygons.</li> <li>Fix duplicate objects in the GPKG dump.</li> <li>Added semantic surface labels back into the GPKG files (3D layers only) in the <code>labels</code> attribute. Previously this attribute was called <code>semantic_values</code>.</li> <li>Removed old API endpoint <code>https://data.3dbag.nl/api/BAG3D_v2</code></li> </ul>"},{"location":"overview/release_notes/#added_3","title":"Added","text":"<ul> <li>New 3D API at <code>api.3dbag.nl</code> that returns CityJSONFeatures with 3D geometry. This beta version of the API is currently not OGC-compliant, but we aim for compliance in a later release.</li> <li><code>b3_bag_bag_overlap</code> attribute, which is the area (m2) of overlap between BAG polygons</li> <li>The following attributes were added in a project funded by the Rijksdienst voor Ondernemend Nederland (RVO). In this project, a method was implemented to calculate the volume of each 3DBAG building, as well as the areas of the wall-, roof- and ground floor- surfaces of each building. For the walls, a distinction was made between surfaces that are in contact with the outside air (outer walls, <code>buitenmuur</code>) and those that are not (party walls, <code>scheidingsmuur</code>). This was the most challenging part of the project as it required the generation of the geometry of those parts of the walls that are shared with another 3DBAG building. These calculations are all based on the LoD2.2 geometries and it should be noted that the areas refer only to those parts of the buildings that are above ground, as we have no elevation data for the underground parts.<ul> <li><code>b3_opp_grond</code></li> <li><code>b3_opp_dak_plat</code></li> <li><code>b3_opp_dak_schuin</code></li> <li><code>b3_opp_scheidingsmuur</code></li> <li><code>b3_opp_buitenmuur</code></li> </ul> </li> </ul>"},{"location":"overview/release_notes/#known-issues_4","title":"Known issues","text":"<ul> <li>BAG date/time attributes in GPKG output are of the string type.</li> <li>The following tiles have incomplete data in the GPKG format (missing layers): <code>9/336/672</code>, <code>8/560/352</code>.</li> <li>The following tiles are completely missing: <code>7/480/912</code>, <code>8/488/560</code>, <code>9/476/592</code>, <code>10/498/592</code>, <code>8/720/344</code>, <code>9/424/692</code>, <code>10/364/472</code>, <code>7/672/192</code>, <code>8/256/536</code>, <code>7/544/720</code>, <code>9/1000/1068</code>, <code>9/1000/1072</code>.</li> <li>Small number of 3D models have invalid geometry. This affects less than 1% of the models.</li> </ul>"},{"location":"overview/release_notes/#20230809-beta","title":"2023.08.09 \u2013 beta","text":"<p>Release date: 9 August 2023</p> <p>Patch release of 2023.06.22</p> <p>With this release we fix an error with the attributes <code>h_dak_min</code>, <code>h_dak_50p</code>, <code>h_dak_70p</code>, <code>h_dak_max</code> in the GPKG and WFS formats. In 3DBAG version 2023.06.22 the values of these attributes were off by 15 meters. This is fixed in this release.</p>"},{"location":"overview/release_notes/#changed-fixed_5","title":"Changed / Fixed","text":"<ul> <li>Fix 15 meter offset in <code>h_dak_min</code>, <code>h_dak_50p</code>, <code>h_dak_70p</code>, <code>h_dak_max</code> attributes on roofparts in GPKG and WFS formats.</li> </ul>"},{"location":"overview/release_notes/#20230622-beta","title":"2023.06.22 \u2013 beta","text":"<p>Release date: 22 June 2023</p> <p>This is the third public beta release of the 3DBAG. It's been a while since the second release. As it turns out it costs quite some work to properly maintain and update 3DBAG next to our busy day jobs. Fortunately we were able to receive funding from the ERC to bring the 3DBAG to a level where it can be maintained and developed reliably. The current release is the first of three that is financed by the ERC budget, and it paves the way towards a stable, open 3DBAG service. We are very happy to see that so many people found a use for 3DBAG to help them with their business, research or hobby projects. And we remain committed to keep maintaining 3DBAG into the future, of course as an open dataset.</p> <p>The team behind 3DBAG has changed in the sense that some people have moved on to other jobs, others are working on 3DBAG with a different affiliation (3DGI, a spinoff of the tudelft3d research group) and we also have welcomed a new member.</p> <p>The biggest technical change is that the 3DBAG now uses the AHN4 pointcloud which was acquired between 2020 and 2022. This means that the building models are much more up-to-date, compared to the previous release which was based solely on AHN3 (acquired starting from 2014). For this new release we use a 'smart' combination of AHN3 and AHN4. We did not opt for a simple 'drop-in' replacement of AHN3 by AHN4 because of the quality issues that we discovered in AHN4. These issues affect a small, yet significant fraction of the buildings. The 'smart' combination entails that our algorithms automatically select the 'best' available point cloud on a per building basis. The selection is based primarily on point coverage, ie. how well the roof surface of a building is covered with AHN points and most importantly if there are any big gaps. Naturally, AHN3 is only considered when a building has not changed compared to the AHN4 data. AHN3 is used for ~8.5% of the buildings, the rest all uses AHN4.</p> <p>There are also some changes in the BAG viewer and the download page. Most notably, the viewer now brings you to an interesting landmark that is randomly picked when you load the website, and all 3DBAG attributes are now visible in the viewer. The download page now also offers a metadata file about the dataset as a whole (including lineage) and the PostgreSQL dump was replaced by one big GPKG file (something that several people have asked for).</p> <p>And last, but not least: behind the scenes a lot of work has been done to completely recreate our automatic building reconstruction pipeline. This helps us to reliably produce new 3DBAG releases from now on. A tangible benefit to the 3DBAG users is that we now have much fewer missing buildings compared to the previous releases. We will continue to work on our pipeline in the background and streamline our internal processes even further.</p> <p>This release contains a record number of 10 383 384 builings. The overall geometric val3dity is also at a record at 99.15% (up from 98.25% in the previous release, counted on the LoD2.2 geometries).</p> <p>Thank you for using the 3DBAG! As always our feedback forms are available and we are reading all the emails that we receive at info@3dbag.nl.</p> <p>-- The 3DBAG Team</p>"},{"location":"overview/release_notes/#update-11-07-2023","title":"Update 11-07-2023","text":"<ul> <li>Regenerated 3D tiles to fix a number of display issues in the 3D BAG viewer, including incorrect placement of search result marker.</li> </ul>"},{"location":"overview/release_notes/#added_4","title":"Added","text":"<ul> <li>The building part ID (<code>pand_deel_id</code>) to the 3D layers. Previously it was only part of the 2D layers.</li> <li>Reconstruction algorithm<ul> <li>added procedure for automatic selection of pointcloud (AHN3 or 4) best suited for reconstruction on a per building basis</li> <li>building areas are now calculated and outputted</li> <li>changed the method for calculating the height attributes on roofparts</li> </ul> </li> <li>A metadata file is now available on the download page. The metadata contains information about the current release, including the versions of the source data sets and the versions of the software that were used for producing the release. The metadata file unifies some of the information that were previously scattered across different formats.</li> <li>3DBAG viewer<ul> <li>When opening the 3DBAG viewer you are brought to a random landmark</li> <li>You can now view all attributes directly in the viewer</li> <li>Clicking on the attribute name in the viewer attribute table now brings you to the corresponding section in the documentation</li> <li>Update basemap to Luchfoto Actueel</li> </ul> </li> <li>Various quality attributes relating to the 'smart' point cloud selection algorithm.</li> <li>3DGI attribution</li> <li>Created a 3DBAG twitter account. Follow this to be notified about 3DBAG updates and other announcements.</li> <li>SHA-256 hashes for the downloadable files (included on the <code>tiles</code> WMS/WFS layer).</li> <li>Download link for each format (included on the <code>tiles</code> WMS/WFS layer).</li> <li>Extended testing of all data formats (included on the <code>tiles</code> WMS/WFS layer).</li> </ul>"},{"location":"overview/release_notes/#changed-fixed_6","title":"Changed / Fixed","text":"<ul> <li>Update of the source vector data sets (BAG, Top10NL) to the version available on 2023-06-05 (TOP10NL) and 2023-06-08 (BAG).</li> <li>Update of the source point cloud data sets. Now AHN3 and AHN4 are used.</li> <li>Significantly fewer missing buildings, due to revamped processing pipeline.</li> <li>Improved geometric validity. Now 99.15% of buildings are geometrically valid.</li> <li>New tiling scheme for downloads.</li> <li>New file naming.</li> <li>3DBAG version number is now a full date instead of a mix between date and minor version number.</li> <li>All 3DBAG specific attributes are now preceded by the <code>b3_</code> prefix.</li> <li>The postgres database dump was replaced by one big gpkg file zipped into a seek-optimized ZIP (SOZip) file.</li> <li>Improvements in the reconstruction algorithm<ul> <li>new procedure for overlap detection between buildings. In this procedure it is guaranteed that points on areas of overlap are only assigned to one of the overlapping buildings.</li> <li>fine tuning of snapping thresholds to achieve better geomtric validity</li> <li>various small improvements</li> </ul> </li> <li>The layer <code>ondergrond</code> was removed.</li> <li>Changed WFS/WMS namespace from <code>BAG3D_v2</code> to <code>BAG3D</code>.</li> <li>Attribute changes:</li> </ul> v21.09 v2023.06 (release) gid - fid - pand_deel_id b3_pand_deel_id dd_id b3_dd_id - tijdstipregistratie - eindregistratie h_maaiveld b3_h_maaiveld dak_type b3_dak_type pw_datum b3_pw_datum pw_actueel - pw_bron b3_pw_bron reconstructie_methode - versie_methode - kas_warenhuis b3_kas_warenhuis ondergronds_type - reconstruction_skipped b3_reconstructie_onvolledig lod11_replace - h_dak_min b3_h_dak_min h_dak_50p b3_h_dak_50p h_dak_70p b3_h_dak_70p h_dak_max b3_h_dak_max val3dity_codes_lod12 b3_val3dity_lod12 val3dity_codes_lod13 b3_val3dity_lod13 val3dity_codes_lod22 b3_val3dity_lod22 semantics_values - rmse_lod12 b3_rmse_lod12 rmse_lod13 b3_rmse_lod13 rmse_lod22 b3_rmse_lod22 rn - - b3_mutatie_ahn3_ahn4 - b3_nodata_fractie_ahn3 - b3_nodata_fractie_ahn4 - b3_nodata_radius_ahn3 - b3_nodata_radius_ahn4 - b3_pw_selectie_reden - b3_puntdichtheid_ahn3 - b3_puntdichtheid_ahn4 - b3_volume_lod12 - b3_volume_lod13 - b3_volume_lod22"},{"location":"overview/release_notes/#known-issues_5","title":"Known issues","text":"<ul> <li>BAG date/time attributes in GPKG output are of the string type.</li> <li>Missing tiles from download page: <code>7/1008/656</code>, <code>8/720/344</code>, <code>9/1000/1068</code>. The 3DBAG viewer may have some additional tiles missing.</li> <li>Small number of 3D models have invalid geometry. This affects less than 1% of the models.</li> <li>Some attributes are missing from the WMS/WFS layers.</li> <li>The GPKG data dump has a small number of duplicate features.</li> <li>The GPKG files have incorrect height attributes (<code>b3_h_*</code>)</li> </ul>"},{"location":"overview/release_notes/#21098-beta","title":"21.09.8 \u2013 beta","text":"<p>Release date: 29 September 2021</p> <p>This is the second public beta release of the renewed 3DBAG. Before addressing what has changed with this release we would like to take a moment to thank everyone that has been downloading and using the first release. It's very exciting to see how people from various disciplines found ways to apply 3DBAG for their use cases! (also see our new In the media page). A special thanks also to everyone that filled out our feedback forms or gave us feedback in other ways. This is much appreciated!</p> <p>For this second release we focused primarily on improving the data quality and the way the data is disseminated. The overall geometric validity of the 3D models has risen to 98.25% (up from ~89% in the previous release). Another highlight is that the 3D outputs are no longer triangulated, as requested by several users. Altogether this should make it easier to use our models in other software. These and more changes are described below in more detail.</p> <p>This 3DBAG release contains 9 692 978 buildings. This is 7.72% less buildings than available in the BAG dataset, mostly due to outdated or otherwise insufficient input data. We hope to do a release based on the updated AHN4 soon, but this release is still based on AHN3.</p> <p>Thank you for using 3DBAG!</p>"},{"location":"overview/release_notes/#added_5","title":"Added","text":"<ul> <li>The building part ID (<code>pand_deel_id</code>) to the 3D layers. Previously it was only part of the 2D layers.</li> <li>A new layer (<code>ondergrond</code>) with parts of the building polygons that were cut off during the reconstruction, because they were detected as the ground.</li> </ul>"},{"location":"overview/release_notes/#changed-fixed_7","title":"Changed / Fixed","text":"<ul> <li>Update of the source data sets (BAG, BGT, Top10NL) to the version available on 2021-09-07.</li> <li>3D geometries are not triangulated anymore in the CityJSON, GeoPackage, PostgreSQL formats. The OBJ format remains triangulated.</li> <li>The CityJSON exporter was rewritten<ul> <li>The semantic surfaces of type <code>WallSurface</code> now have an additional boolean attribute <code>on_footprint</code> which indicates if a WallSurface is on a footprint edge or not.</li> <li>The original BAG footprint is now included for each object</li> <li>CityObject ID's are now based on the BAG <code>identificatie</code> attribute</li> </ul> </li> <li> <p>Improvements in the reconstruction algorithm</p> <ul> <li>Added new triangulation-based snapping node. The goal of this node is to remove (near) duplicate vertices in the 2D roof partition without introducing topological problems. This fixes problems with e.g. spikes (due vertices with invalid coordinates) and missing faces in the final 3D models. With this improvement we have &gt;98% valid geometries, up from 89% in the previous version. We checked this with val3dity.</li> <li>Added a nearest neighbor interpolation for no-data pixels in the heightfield that is used during optimisation. This interpolation picks the lowest value in the neighborhood (with radius of 10 cm at the moment) of the nodata pixel of interest. This should reduce the occurence of erroneous thin vertical 'screens' in building models (several still remain however).</li> <li>Several other smaller bugfixes and improvements.</li> </ul> </li> <li> <p>The object ID in the OBJ files is now the BAG ID (<code>identificatie</code>) instead of an integer sequence.</p> </li> <li>Attribute name changes:</li> </ul> From To _lod11_replace lod11_replace _semantics_values semantics_values _tile_id tile_id _reconstruction_skipped reconstruction_skipped _t_run q_t_run _roofplane_cnt q_roofplane_cnt _data_area q_data_area _nodata_area q_nodata_area _data_coverage q_data_coverage _roof_pt_cnt q_roof_pt_cnt _wall_pt_cnt q_wall_pt_cnt _unsegmented_pt_cnt q_unsegmented_pt_cnt _pc2m_error_hist q_pc2m_error_hist _m2pc_error_hist q_m2pc_error_hist _m2pc_error_max q_m2pc_error_max _rmse q_rmse <ul> <li>The roofpart ID (<code>dd_id</code>) starts with 0. Previously it started with 1.</li> <li>The value <code>could not detect</code> of the <code>dak_type</code> attribute has been changed to <code>no planes</code>.</li> <li>GPKG format: preserve the feature ID (<code>fid</code>) in the <code>pand</code> layer so it is possible to join the other layers on <code>fid</code>.</li> <li>Fixed the duplicate / cloned objects in the output.</li> <li>Improve 3D tiles export and rendering in the Viewer</li> </ul>"},{"location":"overview/release_notes/#known-issues_6","title":"Known issues","text":"<ul> <li>Artificial vertical 'screens' still occur in some building models.</li> <li>1.75% of the buildings is geometrically invalid, consult the <code>val3dity_codes</code> attribute to find out which ones.</li> <li>Missing tiles for download (in all formats): 10, 41, 42, 117, 143, 228, 301, 381, 776, 1485, 1876, 2178, 2333, 2436, 2511, 2662, 2713, 5158, 5186, 5228, 6813, 7364. In the 3D viewer some additional tiles may be missing.</li> <li>Self-intersection on buildings that have a roofplane detected that extends below <code>h_maaiveld</code>.</li> <li>Possibly incaccurate building geometry for buildings with glass roofs.</li> <li>Intersecting 3D geometries in case the input BAG footprints overlap.</li> <li>Possible duplicate vertices in CityJSON files.</li> </ul>"},{"location":"overview/release_notes/#21031-beta","title":"21.03.1 \u2013 beta","text":"<p>Release date: 26 March 2021</p>"},{"location":"overview/release_notes/#added_6","title":"Added","text":"<ul> <li>A brand new 3D viewer.</li> <li>Multiple LoDs, LoD1.2, LoD1.3, LoD2.2.</li> <li>2D and 3D variants of all LoDs. The 3D models are triangulated.</li> <li>More accurate height calculation, due to our new reconstruction method.</li> <li>Underground buildings and floating buildings are removed, underground parts are cut off from the models. This means that we modify the incoming BAG footprints by removing the underground parts.</li> <li>Integrated validation of the 3D models with val3dity.</li> <li>OBJ and CityJSON data formats.</li> <li>A completely re-worked documentation.</li> <li>Report issues on individual buildings and provide general feedback with a form.</li> </ul>"},{"location":"overview/release_notes/#changed","title":"Changed","text":"<ul> <li>Downloads are available in tiles instead of the whole country. Except the PostgreSQL backup, which is only available for the whole country.</li> <li>Switched to BAG 2.0.</li> <li>Basically all the attributes have changed. Note that due to our new reconstruction method, the meaning of the building height percentiles <code>h_dak</code> have changed too. Previously we had multiple percentiles for the ground height, while there is only one <code>h_maaiveld</code> now.</li> <li>All the URLs.</li> <li>New contact information.</li> </ul>"},{"location":"overview/release_notes/#removed","title":"Removed","text":"<ul> <li>CSV data format.</li> </ul>"},{"location":"overview/release_notes/#known-issues_7","title":"Known issues","text":"<ul> <li>Some buildings have a 'spike': a large deviation in the building geometry due to one vertex with an erroneous coordinate (3D models only).</li> <li>Not all buildings are geometrically valid (eg. missing face). Note that this should be evident from the val3dity_codes attribute (3D models only).</li> <li>Missing tiles (in all formats): 6, 8, 10, 20, 42, 50, 51, 52, 53, 57, 309, 736, 1389, 2178, 3647. On the top of the previous list, the following tiles are missing a CityJSON format: 19, 251, 298, 365, 381, 702, 1051, 1812, 2535, 2700, 2962, 2996, 3173, 3324, 3381, 3796, 4248, 4511, 4615, 4729, 5316, 5411, 6237, 6690, 6986, 7290, 7470, 7597, 8061.</li> </ul>"},{"location":"overview/sources/","title":"Data sources","text":"<p>The quality and characteristics of the 3DBAG partly depend on the source data that we use. The better the input, the better the 3DBAG. Several of our choices were governed by the characteristics of these input data sets. Therefore, in order to better understand the 3DBAG, it is important to take a look at the data sources first.</p>"},{"location":"overview/sources/#bag","title":"BAG","text":"<p>The Register of Buildings and Addresses (BAG) is the most detailed, openly available data set on buildings and addresses in the Netherlands. It contains information about each address in a building, such as its current use, construction date or registration status. The data set is regularly updated as new buildings are registered, built or demolished. The municipalities are responsible for the acquisition, maintenance and quality assurance of the data within their boundaries. The data from all municipalities together are centralised and published by Kadaster.</p> <p>The BAG contains several types of geometrical objects. For the 3DBAG only the buildings are used. The polygons in the BAG represent the outline of the building as the projection of the building as seen from above (including underground parts). While in comparison, the BGT registers the footprint of the building as it touches the terrain. The geometry of BAG buildings is acquired from aerial photos and terrestrial measurements and the data positional data accuracy is 30 cm. An overview of the attributes of the BAG can be found in the BAG manual. </p> <p>As source for the 3DBAG we always use the most recent BAG 2.0 data.</p>"},{"location":"overview/sources/#ahn","title":"AHN","text":"<p>The National Height Model of the Netherlands (AHN) is the openly available elevation data set of the Netherlands. This is acquired through airborne laser scanning (LiDAR), with an average point density of 8 points per square meter for the current version.</p> <p>For the 3DBAG we use a smart combination of AHN3 and AHN4. AHN4 was acaquired between 2014 and 2019, and AHN4 between 2020 and 2022. Here you can find the collection dates for each region in the Netherlands. Be aware that if a building was very recently constructed or changed, it can happen that this building does not exist or is no longer correct in the the 3DBAG.</p> <p>For the latest version of the 3DBAG we use both AHN3 and AHN4. This is to guarantee the best possible 3D reconstruction for each building. If a building has no mutation since the acquisition of AHN3, we pick the pointcloud with the best point coverage. This reduces the odds that a building contains small errors due to large no data gaps in the point cloud.</p> <p>There can always be some variation in the point density between buildings and even within one building. There can be no data gaps in the point cloud, caused by an occlusion through objects, water ponds on roofs and scan angle. The number of available points, their distribution and accurate classification has a very significant impact on the quality of the reconstructed models. The quality attributes that we calculate for and assign to each model provide an indication of this quality.</p>"},{"location":"overview/sources/#top10nl","title":"TOP10NL","text":"<p>The TOP10NL is part of the TOPNL data sets, which belong to the Topographic Register of the Netherlands. The TOP10NL can be used at various scales, ranging from 1:5,000 to 1:25,000. It models several object types, including buildings and their function. The TOPNL data can be used as data source, as well as base maps in visualisations.</p> <p>From the TOP10NL we only use the buildings in order to identify the greenhouses and large warehouses among the BAG objects. Due to their glass roof, greenhouses are problematic for our reconstruction algorithm. Therefore we only model these with a simplified shape.</p>"},{"location":"schema/attributes/","title":"Data Attributes","text":"<p>This is a list of all 3DBAG attributes.</p>"},{"location":"schema/attributes/#b3_azimut","title":"<code>b3_azimut</code>","text":"Property Value Description Azimuth of roofpart. Available for the LoD 2.2 roofparts in GPKG 2D layers. Source roofer Data Type FLOAT Unit degrees Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type angle <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface CityJSON Data Type number GeoPackage Locations lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_bag_bag_overlap","title":"<code>b3_bag_bag_overlap</code>","text":"Property Value Description The total overlap area of BAG polygon with other BAG polygons. Unit: square metre. Source bag_bag_overlap Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_bouwlagen","title":"<code>b3_bouwlagen</code>","text":"Property Value Description An estimation of the number of floors in the building. Estimates are only are available for buildings with up to 5 estimated floors. Source floors_estimation Data Type INT Unit - Scale ratio Precision - Value Format <code>-</code> Nullable True Semantic Type count <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_dak_type","title":"<code>b3_dak_type</code>","text":"Property Value Description Roof type of the building. Source roofer Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type category <p>Attribute Values</p> Attribute Value Description <code>unknown</code> Unknown. <code>slanted</code> Roof with at least one slanted surface. <code>multiple horizontal</code> Roof with multiple, only horizontal surfaces. <code>horizontal</code> Roof with a single horizontal surface. <code>no points</code> No point was found for the building. <code>no planes</code> Could not detect a roof surface, even though points were found. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_dd_id","title":"<code>b3_dd_id</code>","text":"Property Value Description Dak Deel ID. Roofpart ID. Source roofer Data Type INT Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type identifier <p>Data format availability</p> Data Format Property Value GeoPackage Locations lod22_2d, lod12_2d, lod13_2d GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_extrusie","title":"<code>b3_extrusie</code>","text":"Property Value Description Indicates which method was used to generate the 3D model. Source roofer Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type identifier <p>Attribute Values</p> Attribute Value Description <code>standard</code> LoD1.2, LoD1.3 and LoD2.2 models were generated. <code>lod11_fallback</code> Only a simple LoD1.1 extrusion was done. This can occur for buildings with a very large footprint such as greenhouses and warehouses. <code>skip</code> No 3D model could be generated due to insufficient point cloud data. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_h_50p","title":"<code>b3_h_50p</code>","text":"Property Value Description Median elevation on roof surface based on reconstructed 3D model in LoD2.2. Given as elevation above sea level (NAP). Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type elevation <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface, Building CityJSON Data Type number GeoPackage Locations lod12_2d, lod13_2d, lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_h_70p","title":"<code>b3_h_70p</code>","text":"Property Value Description The 70th percentile elevation on roof surface based on reconstructed 3D model in LoD2.2. Given as elevation above sea level (NAP). Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type elevation <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface, Building CityJSON Data Type number GeoPackage Locations lod12_2d, lod13_2d, lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_h_max","title":"<code>b3_h_max</code>","text":"Property Value Description Maximum elevation on roof surface based on reconstructed 3D model in LoD2.2. Given as elevation above sea level (NAP). Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type elevation <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface, Building CityJSON Data Type number GeoPackage Locations lod12_2d, lod13_2d, lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_h_min","title":"<code>b3_h_min</code>","text":"Property Value Description Minimum elevation on roof surface based on reconstructed 3D model in LoD2.2. Given as elevation above sea level (NAP). Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type elevation <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface, Building CityJSON Data Type number GeoPackage Locations lod12_2d, lod13_2d, lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_h_maaiveld","title":"<code>b3_h_maaiveld</code>","text":"Property Value Description Elevation above sea level (Amsterdam Ordnance Datum) at the ground level of the building. Calculated as the 5th percentile of the ground points found within a 4 meter radius of the building. Source roofer Data Type FLOAT Unit metre Scale ratio Precision - Value Format <code>-</code> Nullable False Semantic Type elevation <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_h_nok","title":"<code>b3_h_nok</code>","text":"Property Value Description Height of the longest ridge line of the building. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type length <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_hellingshoek","title":"<code>b3_hellingshoek</code>","text":"Property Value Description Slope of roofpart. Available for the LoD 2.2 roofparts in GPKG 2D layers. Source roofer Data Type FLOAT Unit degrees Scale ratio Precision 2 Value Format <code>-</code> Nullable - Semantic Type angle <p>Data format availability</p> Data Format Property Value CityJSON Locations RoofSurface CityJSON Data Type number GeoPackage Locations lod22_2d GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_is_glas_dak","title":"<code>b3_is_glas_dak</code>","text":"Property Value Description The building has a glass roof. Notice: this is based on an experimental automated pointcloud analysis. Source roofer Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type flag <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_kas_warenhuis","title":"<code>b3_kas_warenhuis</code>","text":"Property Value Description The building is greenhouse or warehouse (according to TOP10NL) or has an area of over 70000 square meters. Source TOP10NL Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type flag <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_kwaliteitsindicator","title":"<code>b3_kwaliteitsindicator</code>","text":"Property Value Description Indication of the reliability of the building reconstruction. <code>b3_kwaliteitsindicator = (b3_bag_bag_overlap == 0) AND (b3_val3dity_lod22 == []) AND ( (b3_pw_selectie_reden != _HIGHEST_YET_INSUFFICIENT_COVERAGE) AND (b3_pw_selectie_reden != _LATEST_BUT_OUTDATED) )</code> Source tyler-multiformat Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable True Semantic Type flag <p>Attribute Values</p> Attribute Value Description <code>true</code> The reconstruction is correct. <code>false</code> The reconstruction is possibly incorrect. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_mutatie_ahn3_ahn4","title":"<code>b3_mutatie_ahn3_ahn4</code>","text":"Property Value Description <code>true</code> if there was a significant change detected in the building between the AHN3 and AHN4 pointclouds. Source roofer Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type flag <p>Attribute Values</p> Attribute Value Description <code>true</code> There was a significant change detected in the building between the AHN3 and AHN4 pointclouds. <code>false</code> There was no significant change detected in the building between the AHN3 and AHN4 pointclouds. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_mutatie_ahn4_ahn5","title":"<code>b3_mutatie_ahn4_ahn5</code>","text":"Property Value Description <code>true</code> if there was a significant change detected in the building between the AHN4 and AHN5 pointclouds. Source roofer Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type flag <p>Attribute Values</p> Attribute Value Description <code>true</code> There was a significant change detected in the building between the AHN4 and AHN5 pointclouds. <code>false</code> There was no significant change detected in the building between the AHN4 and AHN5 pointclouds. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_n_nok","title":"<code>b3_n_nok</code>","text":"Property Value Description Number of detected ridge lines. Source roofer Data Type INT Unit - Scale ratio Precision - Value Format <code>-</code> Nullable True Semantic Type count <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_n_vlakken","title":"<code>b3_n_vlakken</code>","text":"Property Value Description Number of detected roofplanes in the point cloud (could be different from the LoD2.2 model). Source roofer Data Type INT Unit - Scale ratio Precision - Value Format <code>-</code> Nullable True Semantic Type count <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_nodata_fractie_ahn3","title":"<code>b3_nodata_fractie_ahn3</code>","text":"Property Value Description Fraction of the footprint area that has no point data in the AHN3 point cloud. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit - Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type fraction <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_nodata_fractie_ahn4","title":"<code>b3_nodata_fractie_ahn4</code>","text":"Property Value Description Fraction of the footprint area that has no point data in the AHN4 point cloud. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit - Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type fraction <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_nodata_fractie_ahn5","title":"<code>b3_nodata_fractie_ahn5</code>","text":"Property Value Description Fraction of the footprint area that has no point data in the AHN4 point cloud. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit - Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type fraction <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_nodata_radius_ahn3","title":"<code>b3_nodata_radius_ahn3</code>","text":"Property Value Description Radius of the largest circle inside the BAG polygon without any AHN3 points. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type length <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_nodata_radius_ahn4","title":"<code>b3_nodata_radius_ahn4</code>","text":"Property Value Description Radius of the largest circle inside the BAG polygon without any AHN4 points. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type length <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_nodata_radius_ahn5","title":"<code>b3_nodata_radius_ahn5</code>","text":"Property Value Description Radius of the largest circle inside the BAG polygon without any AHN5 points. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type length <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_opp_buitenmuur","title":"<code>b3_opp_buitenmuur</code>","text":"Property Value Description Total area of the exterior walls. Unit: square metre. Source party_walls Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_opp_dak_plat","title":"<code>b3_opp_dak_plat</code>","text":"Property Value Description Total area of the flat parts of the roof. Unit: square metre. Source party_walls Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_opp_dak_schuin","title":"<code>b3_opp_dak_schuin</code>","text":"Property Value Description Total area of the sloped parts of the roof. Unit: square metre. Source party_walls Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_opp_grond","title":"<code>b3_opp_grond</code>","text":"Property Value Description Total ground floor area. Unit: square metre. Source party_walls Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_opp_scheidingsmuur","title":"<code>b3_opp_scheidingsmuur</code>","text":"Property Value Description Total area of the party walls. Unit: square metre. Source party_walls Data Type FLOAT Unit square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type area <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_pand_deel_id","title":"<code>b3_pand_deel_id</code>","text":"Property Value Description Buildingpart ID. A building can have multiple parts when it was cut into parts because of underground parts. Source roofer Data Type INT Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type identifier <p>Data format availability</p> Data Format Property Value GeoPackage Locations lod13_3d, lod12_2d, lod22_2d, lod22_3d, lod13_2d, lod12_3d GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_puntdichtheid_ahn3","title":"<code>b3_puntdichtheid_ahn3</code>","text":"Property Value Description Density of the AHN3 point cloud on BAG polygon. Only points classified as building or ground are considered. Source roofer Data Type FLOAT Unit points per square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type density <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_puntdichtheid_ahn4","title":"<code>b3_puntdichtheid_ahn4</code>","text":"Property Value Description Density of the AHN4 point cloud on BAG polygon. Only points classified as building or ground are considered. Unit: points per square metre. Source roofer Data Type FLOAT Unit points per square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type density <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_puntdichtheid_ahn5","title":"<code>b3_puntdichtheid_ahn5</code>","text":"Property Value Description Density of the AHN5 point cloud on BAG polygon. Only points classified as building or ground are considered. Unit: points per square metre. Source roofer Data Type FLOAT Unit points per square metre Scale ratio Precision 2 Value Format <code>-</code> Nullable False Semantic Type density <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_pw_bron","title":"<code>b3_pw_bron</code>","text":"Property Value Description Source of the point cloud, eg. AHN3 or AHN4. Source roofer Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type text <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_pw_datum","title":"<code>b3_pw_datum</code>","text":"Property Value Description Acquisition year of the point cloud. This is determined by looking at the GPS timestamps on the AHN points for the building. In case good GPS timestamps are not available the file creation date of the point cloud file is used. Source roofer Data Type DATE Unit - Scale interval Precision - Value Format <code>YYYY</code> Nullable False Semantic Type year <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATE"},{"location":"schema/attributes/#b3_pw_onvoldoende","title":"<code>b3_pw_onvoldoende</code>","text":"Property Value Description The input pointcloud was insufficient to generate a 3D model. Source roofer Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type flag <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#b3_pw_selectie_reden","title":"<code>b3_pw_selectie_reden</code>","text":"Property Value Description Provides information about the pointcloud selection indicated in the <code>pw_bron</code> attribute. Source roofer Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type category <p>Attribute Values</p> Attribute Value Description <code>PREFERRED_AND_LATEST</code> The selected point cloud has a good point coverage and there are no newer point clouds available that also have good point coverage. <code>PREFERRED_NOT_LATEST</code> The selected point cloud has a good point coverage and there is a newer point cloud available that also has good coverage. Newer pointcloud was not selected because no mutation was detected. <code>LATEST_WITH_MUTATION</code> The selected point cloud has a good point coverage and a mutation was detected compared to the older pointclouds. <code>_HIGHEST_YET_INSUFFICIENT_COVERAGE</code> The selected point cloud has possible poor point coverage. Nonetheless, it is the point cloud with the highest point coverage among all available point clouds. <code>_LATEST_BUT_OUTDATED</code> The selected pointcloud is the latest one available, but it may be outdated for this building. This happens when the year of construction is equal or later than the point cloud acquisition date. <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_rmse_lod12","title":"<code>b3_rmse_lod12</code>","text":"Property Value Description Root Mean Square Error of the 3D distances between the point cloud and the LoD1.2 model. Unit: metre. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type error <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_rmse_lod13","title":"<code>b3_rmse_lod13</code>","text":"Property Value Description Root Mean Square Error of the 3D distances between the point cloud and the LoD1.3 model. Unit: metre. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type error <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_rmse_lod22","title":"<code>b3_rmse_lod22</code>","text":"Property Value Description Root Mean Square Error of the 3D distances between the point cloud and the LoD2.2 model. Unit: metre. Source roofer Data Type FLOAT Unit metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type error <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_t_run","title":"<code>b3_t_run</code>","text":"Property Value Description Reconstruction time in milliseconds. Source roofer Data Type INT Unit milliseconds Scale ratio Precision - Value Format <code>-</code> Nullable False Semantic Type duration <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#b3_val3dity_lod12","title":"<code>b3_val3dity_lod12</code>","text":"Property Value Description Val3dity error codes for the LoD1.2 3D model. An empty list means valid geometry. Source roofer,val3dity Data Type ARRAY Unit - Scale - Precision - Value Format <code>-</code> Nullable True Semantic Type list <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type array GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_val3dity_lod13","title":"<code>b3_val3dity_lod13</code>","text":"Property Value Description Val3dity error codes for the LoD1.3 3D model. An empty list means valid geometry. Source roofer,val3dity Data Type ARRAY Unit - Scale - Precision - Value Format <code>-</code> Nullable True Semantic Type list <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type array GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_val3dity_lod22","title":"<code>b3_val3dity_lod22</code>","text":"Property Value Description Val3dity error codes for the LoD2.2 3D model. An empty list means valid geometry. Source roofer,val3dity Data Type ARRAY Unit - Scale - Precision - Value Format <code>-</code> Nullable True Semantic Type list <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type array GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#b3_volume_lod12","title":"<code>b3_volume_lod12</code>","text":"Property Value Description Volume of the LoD1.2 model. Unit: cubic metre. Source roofer Data Type FLOAT Unit cubic metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type volume <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_volume_lod13","title":"<code>b3_volume_lod13</code>","text":"Property Value Description Volume of the LoD1.3 model. Unit: cubic metre. Source roofer Data Type FLOAT Unit cubic metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type volume <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#b3_volume_lod22","title":"<code>b3_volume_lod22</code>","text":"Property Value Description Volume of the LoD2.2 model. Unit: cubic metre. Source roofer Data Type FLOAT Unit cubic metre Scale ratio Precision 2 Value Format <code>-</code> Nullable True Semantic Type volume <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type FLOAT"},{"location":"schema/attributes/#begingeldigheid","title":"<code>begingeldigheid</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATE Unit - Scale interval Precision - Value Format <code>YYYY-MM-DD</code> Nullable False Semantic Type day <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATE"},{"location":"schema/attributes/#documentdatum","title":"<code>documentdatum</code>","text":"Property Value Description Building registration date. Source BAG Data Type DATE Unit - Scale interval Precision - Value Format <code>YYYY-MM-DD</code> Nullable False Semantic Type day <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATE"},{"location":"schema/attributes/#documentnummer","title":"<code>documentnummer</code>","text":"Property Value Description Document number. Source BAG Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type identifier <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#eindgeldigheid","title":"<code>eindgeldigheid</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATE Unit - Scale interval Precision - Value Format <code>YYYY-MM-DD</code> Nullable True Semantic Type day <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATE"},{"location":"schema/attributes/#eindregistratie","title":"<code>eindregistratie</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable True Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#geconstateerd","title":"<code>geconstateerd</code>","text":"Property Value Description Indicates that the buildings has included in the BAG registration. Source BAG Data Type BOOL Unit - Scale nominal Precision - Value Format <code>-</code> Nullable True Semantic Type flag <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type boolean GeoPackage Locations pand GeoPackage Data Type BOOLEAN"},{"location":"schema/attributes/#identificatie","title":"<code>identificatie</code>","text":"Property Value Description ID of a building. Source BAG,roofer Data Type STRING Unit - Scale nominal Precision - Value Format <code>NL.IMBAG.Pand.&lt;16 digits&gt;</code> Nullable False Semantic Type identifier <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations lod13_3d, lod12_2d, pand, lod22_2d, lod22_3d, lod13_2d, lod12_3d GeoPackage Data Type TEXT"},{"location":"schema/attributes/#labels","title":"<code>labels</code>","text":"Property Value Description Building surface semantics. Only available in the GPKG 3D layers. This is an array of integers, where an integer refers to a surface type (0: <code>GroundSurface</code>, 1: <code>RoofSurface</code>, 2: <code>OuterWallSurface</code>, 3: <code>InnerWallSurface</code>). If a surface does not have a semantic value, NULL is used instead. Thus the length of the array equals the number of 3D polygons in the geometry, and the order of values in the array corresponds to the order of polygons. Source tyler-multiformat Data Type ARRAY Unit - Scale - Precision - Value Format <code>-</code> Nullable False Semantic Type list <p>Data format availability</p> Data Format Property Value GeoPackage Locations lod22_3d, lod13_3d, lod12_3d GeoPackage Data Type TEXT"},{"location":"schema/attributes/#oorspronkelijkbouwjaar","title":"<code>oorspronkelijkbouwjaar</code>","text":"Property Value Description Building construction year. Source BAG Data Type INT Unit - Scale interval Precision - Value Format <code>YYYY</code> Nullable False Semantic Type year <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/attributes/#status","title":"<code>status</code>","text":"Property Value Description The current fase in the buildings life-cycle. Source BAG Data Type STRING Unit - Scale nominal Precision - Value Format <code>-</code> Nullable False Semantic Type category <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type TEXT"},{"location":"schema/attributes/#tijdstipeindregistratielv","title":"<code>tijdstipeindregistratielv</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable True Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#tijdstipinactief","title":"<code>tijdstipinactief</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable True Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#tijdstipinactieflv","title":"<code>tijdstipinactieflv</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable True Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#tijdstipnietbaglv","title":"<code>tijdstipnietbaglv</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable True Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#tijdstipregistratie","title":"<code>tijdstipregistratie</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable False Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#tijdstipregistratielv","title":"<code>tijdstipregistratielv</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type DATETIME Unit - Scale interval Precision - Value Format <code>YYYY-MM-DDThh:mm:ss.sss</code> Nullable False Semantic Type millisecond <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type string GeoPackage Locations pand GeoPackage Data Type DATETIME"},{"location":"schema/attributes/#voorkomenidentificatie","title":"<code>voorkomenidentificatie</code>","text":"Property Value Description Relates to the building registration history and version. Source BAG Data Type INT Unit - Scale ordinal Precision - Value Format <code>-</code> Nullable False Semantic Type identifier <p>Data format availability</p> Data Format Property Value CityJSON Locations Building CityJSON Data Type number GeoPackage Locations pand GeoPackage Data Type INTEGER"},{"location":"schema/concepts/","title":"General Concepts","text":""},{"location":"schema/concepts/#level-of-detail-lod","title":"Level of Detail (LoD)","text":"<p>All spatial models are abstractions of reality. Some are closer to the real thing, while others are less so. In 3D GIS, the Level of Detail (LoD) of a 3D model describes the amount of detail that is captured in the model, although a high LoD can still be an inaccurate approximation of reality. For instance, consider a very simple building with four corners and a gabled roof. A very rough approximation of this building would be a cube. While on the other end, we could have individual surfaces in the model that follow the shape of the building exactly, each of them labelled with additional information like surface type, material etc.</p> <p>Higher LoDs (LoD2 and above) can label the surfaces of the model based on their function in the real object. These labels are called semantics, and accordingly we call the labelled surfaces semantic surfaces. For instance in case of building models, we can identify a ground surface, wall surface, roof surface etc.</p> <p>In the 3DBAG, we use the so called improved LoD specification, as it is displayed in the figure below.</p> An improved LOD specification for 3D building models. Filip Biljecki, Hugo Ledoux, and Jantien Stoter. Computers, Environment and Urban Systems, 59: 25\u201337, 2016. DOI <p>For the 3DBAG the relevant LoDs are 1.2, 1.3, and 2.2. Note that apart from the amount of geometric detail, the key difference between LoD1 and LoD2 is the presence of semantic surfaces, to allow, for example, roof surfaces to be coloured red and wall surfaces to be coloured grey. Furthermore, the distinction between LoD1.2 and LoD1.3 is that LoD1.3 distinguishes between significant height differences within one building, while in case of LoD1.2 the whole model has a uniform height.</p>"},{"location":"schema/concepts/#3d-geometric-primitives","title":"3D geometric primitives","text":"<p>In 2D GIS, the geometry of objects can be represented by points, lines, polygons and their variations. There are standards that prescribe a set of rules for these primitives so that data can be exchanged in an interoperable manner (eg Simple Feature Access).</p> <p>In 3D GIS, the geometric primitives and their rules need to be extended to the third dimension, so that their interactions can be described in a meaningful way. The figure below gives an overview of the commonly used primitives in 3D GIS.</p> 3D primitives handled by val3dity. See: Val3dity: validation of 3D GIS primitives according to the international standards. Hugo Ledoux. Open Geospatial Data, Software and Standards 3 (1), 2018, pp. 1. DOI <p>For the 3DBAG the most relevant primitive is the Solid, as we treat the building models as Solids in our process. This distinction is important, because of the (stricter) rules that apply to Solids, compared to other 3D primitives.</p> <p>3D primitives and data formats</p> <p>Not every data format supports the 3D primitives mentioned above. In fact, this applies to all our export formats except CityJSON. Therefore, in such formats we use the geometry types that are the closest equivalent to Solids. The PostgreSQL backup is a bit of an outlier here, because technically PostGIS can store Solids, but only with the SFCGAL extension. In order to cause the least friction for restoring the PostgreSQL backup, we store the 3D geometries as <code>MultiPolygonZ</code>.</p>"},{"location":"schema/concepts/#valid-3d-geometries","title":"Valid 3D geometries","text":"<p>Having valid geometries is important for using the data in various applications. Standards help to define a common set of rules to which both data producers and consumers can adhere to, when working with data. val3dity is a software that validates 3D primitives according to the international standard ISO19107.</p> <p>We integrated val3dity into our process, and so we validate each 3D model after it is reconstructed. However, the building models are validated independently as they go through the reconstruction process. Therefore, we cannot detect errors in the interaction of multiple models (error codes above 500).</p> <p>b3_val3dity_lod12\", \"b3_val3dity_lod13\", \"b3_val3dity_lod22</p> <p>The attributes starting with <code>b3_val3dity_</code> store the error codes from val3dity (if any) for a model.</p> val3dity error codes. See the full description of each code in the val3dity documentation."},{"location":"schema/layers/","title":"Data Layers","text":"<p>The diagram above shows the relation between a building in the real world and how is it modeled in the 3DBAG. The BAG models buildings with their largest extent as viewed from above. In practice this means a single 2D polygon per building, as it is displayed by the black polygon in the figure. Therefore, the BAG polygon may also include parts of the building that are below terrain level.</p> <p>In order to create an accurate model of the above terrain parts of a building, we cut off the below terrain parts from the BAG polygon. We only consider the parts above the terrain, because we do not have data on the 3D extent of the parts below the terrain.</p> <p>From the parts above terrain we then generate the 3D models in LoD1.2, 1.3 and 2.2. We realise that for some applications it is more suitable to read 2D polygons, and the building height information from attributes. Therefore, we also provide a 2D counterpart in each LoD.</p> <p>b3_kas_warenhuis</p> <p>In case of greenhouses and large warehouses we do not cut off any parts of the BAG model and take the polygon as is, and only generate an LoD1.1 blockmodel. Thus, such buildings only have an LoD1.1 model and are marked with the attribute value <code>b3_kas_warenhuis</code><code>= true</code>.</p> <p>In case of the 2D models, the polygons represent the 2D projection of the roof planes of the 3D model. For LoD1.2 and LoD1.3, the 3D model can be fully reconstructed from the 2D model, by taking the 2D polygons and extruding each to one of their <code>b3_h_dak_*</code> height values from their heights at surface level which is stored in b3_h_maaiveld. However, this is not true for the LoD2.2 models, since here we have slanted roof planes, which cannot be represented by a 2D polygon and a single height value.</p> <p>The 3DBAG has 6 geometric representations of a BAG object (a feature). The 6 representations are the 2D and 3D variants of the LoD1.2, LoD1.3 and LoD2.2 models of the feature. Depending on the representation, a single feature can have multiple geometry parts.</p> <p>Some buildings have multiple disjoint part above the terrain, while they are connected with an underground garage for instance. In such cases, the <code>b3_pand_deel_id</code> can identify these parts within the same feature.</p> <p>The figure below illustrates the relation between the feature and the various geometry parts above terrain.</p> <p></p>"},{"location":"schema/layers/#calculation-of-height-values","title":"Calculation of height values","text":"<p>Each LoD of a building in 3DBAG has one ground height (<code>b3_h_maaiveld</code>) and one or more roof heights (<code>b3_h_dak_*</code>). All heights are given in RD/NAP (EPSG:7408, part of EPSG:7415).</p> <p>The ground height is determined as the 5th elevation percentile of all the AHN ground points that were found in a 4 meter radius around the BAG polygon of a building.</p> <p>The roof heights (<code>b3_h_dak_*</code>) of a building are based on the most detaled reconstructed 3D model (LoD2.2). Per roofpart we always compute the 0th (minimum height), 50th (median height), 70th, and 100th (maximum)  percentiles. For instance <code>b3_h_dak_50p</code> means the median height of the roofpart.</p>"},{"location":"schema/layers/#heights-in-2d-vs-3d-layers","title":"Heights in 2D vs 3D layers","text":"<p>For the 2D layers the heights are the statistcal aggregates as explained above and given as an attribute for each modelled roofpart.</p> <p>For the 3D layers the heights are not given as attributes since they are explicitly modelled in the 3D geometry of the model. For the LoD1.2 and LoD1.3 layers (where each roofpart is modelled at a single height) the 70th percentile roof heights are used in the extrusion. In the LoD2.2 3D (<code>lod22_3d</code>) layer the roofs are directly modelled with the roof planes that were detected in the AHN point cloud.</p> <p>Height picking in the 3D webviewer</p> <p>If you click on a building in our 3D webviewer, you'll notice a height value shown in the bottom left corner of the screen. This is the height of the building at the clicked location as measured from the base of the building, ie. <code>b3_h_maaiveld</code> is already subtracted from this.</p>"},{"location":"schema/layers/#pand","title":"<code>pand</code>","text":"<p>Stores the attributes and geometry of the <code>Pand</code> object of the BAG, plus the attributes of the 3DBAG that relate to the whole building. Contains only those buildings that went into the reconstruction. The attribute <code>fid</code> is the unique, numeric ID of the objects. Besides being the primary key, <code>fid</code> is also used for joining the other layers to <code>pand</code>.</p>"},{"location":"schema/layers/#lod12_3d","title":"<code>lod12_3d</code>","text":"<p>A 3D model of the building parts above the terrain, modelled in LoD1.2. Can join to <code>pand</code> on <code>fid</code>.</p>"},{"location":"schema/layers/#lod12_2d","title":"<code>lod12_2d</code>","text":"<p>The 2D projection of the LoD1.2 model. The elevation of the detected LoD1.2 roof planes are stored as height attributes (<code>h_dak_*</code>). Only the above terrain parts of the BAG footprint are included. Can join to <code>pand</code> on <code>fid</code>.</p>"},{"location":"schema/layers/#lod13_3d","title":"<code>lod13_3d</code>","text":"<p>A 3D model of the building parts above the terrain, modelled in LoD1.3. Can join to <code>pand</code> on <code>fid</code>.</p>"},{"location":"schema/layers/#lod13_2d","title":"<code>lod13_2d</code>","text":"<p>The 2D projection of the LoD1.3 model. The elevation of the detected LoD1.3 roof planes are stored as height attributes (<code>h_dak_*</code>). Only the above terrain parts of the BAG footprint are included. Can join to <code>pand</code> on <code>fid</code>.</p>"},{"location":"schema/layers/#lod22_3d","title":"<code>lod22_3d</code>","text":"<p>A 3D model of the building parts above the terrain, modelled in LoD2.2. Can join to <code>pand</code> on <code>fid</code>.</p>"},{"location":"schema/layers/#lod22_2d","title":"<code>lod22_2d</code>","text":"<p>The 2D projection of the LoD2.2 model. The elevation of the detected LoD2.2 roof planes are stored as height attributes (<code>h_dak_*</code>). Note that the slanted roof planes of the 3D model cannot be reconstructed from these 2D polygons and height attributes. Only the above terrain parts of the BAG footprint are included. Can join to <code>pand</code> on <code>fid</code>.</p>"}]}